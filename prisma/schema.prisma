// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts Account[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  access_token      String? @db.String
  refresh_token     String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Product {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  price        Float
  image        String
  categorySlug Category[]
  colors       Color[]
  sizes        Size[]
  description  String
  isPublished  Boolean    @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Size {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  display String
  size    String

  productId String?  @db.ObjectId
  product   Product? @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  display String
  color   String

  productId String?  @db.ObjectId
  product   Product? @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  display      String
  categorySlug String

  productId String?  @db.ObjectId
  product   Product? @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Policy {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  icon        String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
